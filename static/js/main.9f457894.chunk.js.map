{"version":3,"sources":["components/AccountBalance.js","FirstBankofSpringfield.png","components/Home.js","components/UserProfile.js","components/Login.js","components/Debits.js","components/Credits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","displayBalance","Math","round","this","props","accountBalance","Component","Home","document","title","class","to","src","icon","alt","style","alignSelf","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Debits","debits","map","debit","date","slice","amount","description","id","addDebit","step","Credits","credits","credit","addCredit","App","logInInfo","newUser","currentUser","today","Date","getFullYear","getMonth","getDate","Number","newDebit","length","debitSum","newCredit","creditSum","a","axios","get","data","forEach","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f457894.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n\r\n  render() {\r\n    //Round up the account balance to two decimal places to properly represent cents\r\n    //set the rounded account balance to variable displayBalance\r\n    let displayBalance = (Math.round(this.props.accountBalance*100)/100);\r\n    //an if statement to display a warning message if the account balance is below 0\r\n    if(displayBalance<0){\r\n      return (\r\n          <div>\r\n            Balance: {displayBalance}\r\n            <br></br>\r\n            D'oh your account balance is in the red. Remedy this immediately!\r\n          </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          Balance: {displayBalance}\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default AccountBalance;\r\n","export default __webpack_public_path__ + \"static/media/FirstBankofSpringfield.1d835858.png\";","import React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\nimport icon from '../FirstBankofSpringfield.png'\r\nimport '../App.css'\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    document.title = \"Home\"\r\n    return (\r\n        <div>\r\n\r\n          <div class=\"banner\">\r\n            <h1>Bank of React: </h1>\r\n            <p>Springfield branch</p>\r\n          </div>\r\n\r\n          <div class =\"interface\">\r\n            <Link to=\"/login\">log in</Link>\r\n            <br></br>\r\n            <Link to=\"/userProfile\">User Profile</Link>\r\n            <AccountBalance accountBalance={this.props.accountBalance}/>\r\n            <Link to=\"/debits\">debits</Link>    |   <Link to=\"/credits\">credits</Link>\r\n            <br></br>\r\n            <br></br>\r\n            <img src={icon} alt=\"bank\" style={{alignSelf: 'center'}} />\r\n          </div>\r\n          \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h1>User Profile</h1>\r\n\r\n          <div>Username: {this.props.userName}</div>\r\n          <div>Member Since: {this.props.memberSince}</div>\r\n          <Link to=\"/\">Return to Home</Link>\r\n          \r\n        </div>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default UserProfile;\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {Link} from 'react-router-dom';\r\nclass LogIn extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      user: {\r\n        userName: '',\r\n        password: ''\r\n      },\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}\r\n    const inputField = e.target.name\r\n    const inputValue = e.target.value\r\n    updatedUser[inputField] = inputValue\r\n\r\n    this.setState({user: updatedUser})\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)\r\n    this.setState({redirect: true})\r\n  }\r\n\r\n  render () {\r\n    if (this.state.redirect) {\r\n      return (<Redirect to=\"/userProfile\"/>)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"userName\">User Name</label>\r\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>\r\n          <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn\r\n","import {Link} from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Debits = (props) => {\r\n\tdocument.title = \"Debits\"\r\n\tlet debitsView = () => {\r\n        const { debits } = props;\r\n        return debits.map((debit) => {\r\n            let date = debit.date.slice(0,10);\r\n            return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\r\n        })\r\n    }\r\n\r\n    return (\r\n    \t<div>\r\n    \t   <h1>Debits</h1>\r\n\r\n    \t   {debitsView()}\r\n           <form onSubmit={props.addDebit}>\r\n             <input type=\"text\" name=\"description\" />\r\n             <input type=\"number\" name=\"amount\" step=\".01\" />\r\n             <button type=\"submit\">Add Debit</button>\r\n\r\n           </form>\r\n\r\n\t\t\t\t\t <h2><AccountBalance accountBalance={props.accountBalance}/></h2>\r\n\t\t\t\t\t <Link to=\"/\">Return to Home</Link>\r\n\r\n    \t</div>\r\n\r\n    )\r\n}\r\nexport default Debits;\r\n","import {Link} from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Credits = (props) => {\r\n\tdocument.title = \"Credits\"\r\n\tlet creditsView = () => {\r\n        const { credits } = props;\r\n        return credits.map((credit) => {\r\n            let date = credit.date.slice(0,10);\r\n            return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\r\n        })\r\n    }\r\n    return (\r\n\r\n    \t<div>\r\n    \t   <h1>Credits</h1>\r\n    \t   {creditsView()}\r\n           <form onSubmit={props.addCredit}>\r\n             <input type=\"text\" name=\"description\" />\r\n             <input type=\"number\" name=\"amount\" step=\".01\" />\r\n             <button type=\"submit\">Add Credit</button>\r\n\r\n           </form>\r\n\t\t\t\t\t <h2><AccountBalance accountBalance={props.accountBalance}/></h2>\r\n\t\t\t\t\t <Link to=\"/\">Return to Home</Link>\r\n\t\t\t</div>\r\n\r\n    )\r\n}\r\nexport default Credits;\r\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login'\nimport Debits from './components/Debits'\nimport Credits from './components/Credits'\nimport './App.css'\nimport axios from \"axios\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountBalance: 0,\n      debits: [],\n      credits: [],\n      currentUser: {\n        userName: 'Homer_Simpson',\n        memberSince: '07/23/96',\n      }\n\n    }\n  }\n\n  async componentDidMount() {\n    let debits = await axios.get(\"https://moj-api.herokuapp.com/debits\")\n    let credits = await axios.get(\"https://moj-api.herokuapp.com/credits\")\n    //get data from API response\n    debits = debits.data\n    credits = credits.data\n\n    //calculates debit and credit totals\n    let debitSum = 0, creditSum = 0;\n    debits.forEach((debit) => {\n      debitSum += debit.amount\n    })\n    credits.forEach((credit) => {\n      creditSum += credit.amount\n    })\n    //calculates balance and sets it as well as credit sum and debit\n    let accountBalance = creditSum - debitSum;\n    this.setState({debits, credits, accountBalance});\n  }\n\n  mockLogIn = (logInInfo) => {\n    const newUser = {\n    ...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n\n  addDebit = (e) => {\n    //send to debits view via props\n    //updates state based off user input\n    e.preventDefault();\n    // gets the current date and formats it\n    const today = new Date();\n    const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    //isolates the description and amount from the passed input\n    const description  = e.target[0].value;\n    const amount  = Number(e.target[1].value);\n    //creates a new debit object from the passed values\n    const newDebit = {id: this.state.debits.length, amount: amount, description: description, date:date}\n    //updates account balance, the debit sum and adds the newdebit to the list\n    this.setState({accountBalance: this.state.accountBalance - amount, debitSum: this.state.debitSum+amount, debits: [newDebit, ...this.state.debits]})\n  }\n\n  addCredit = (e) => {\n    //send to debits view via props\n    //updates state based off user input\n    e.preventDefault();\n    // gets the current date and formats it\n    const today = new Date()\n    const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    //isolates the description and amount from the passed input\n    const description  = e.target[0].value;\n    const amount  = Number(e.target[1].value);\n    //creates a new debit object from the passed values\n    const newCredit = {id: this.state.credits.length, amount: amount, description: description, date:date}\n    //updates account balance, the debit sum and adds the newdebit to the list\n    this.setState({accountBalance: this.state.accountBalance + amount, creditSum: this.state.creditSum+amount, credits: [newCredit, ...this.state.credits]})\n\n  }\n\n  render() {\n\n    const {debits} = this.state;\n    const {credits} = this.state;\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\n\n    const UserProfileComponent = () => (\n        <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\n    );\n\n    const LogInComponent = () => (\n      <LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />\n    );\n\n    const DebitsComponent = () => (<Debits addDebit={this.addDebit} debits={debits} accountBalance={this.state.accountBalance}/>);\n\n    const CreditsComponent = () => (<Credits addCredit={this.addCredit} credits={credits} accountBalance={this.state.accountBalance} />);\n\n    return (\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" render={HomeComponent}/>\n            <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n            <Route exact path=\"/login\" render={LogInComponent}/>\n            <Route exact path=\"/debits\" render={DebitsComponent}/>\n            <Route exact path=\"/credits\" render={CreditsComponent}/>\n          </Switch>\n        </Router>\n    );\n\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}